import{k as b,r as A,_}from"./index-BF2D087B.js";var u=63710088e-1,g={centimeters:u*100,centimetres:u*100,degrees:u/111325,feet:u*3.28084,inches:u*39.37,kilometers:u/1e3,kilometres:u/1e3,meters:u,metres:u,miles:u/1609.344,millimeters:u*1e3,millimetres:u*1e3,nauticalmiles:u/1852,radians:1,yards:u*1.0936};function M(r,e,a){a===void 0&&(a={});var t={type:"Feature"};return(a.id===0||a.id)&&(t.id=a.id),a.bbox&&(t.bbox=a.bbox),t.properties=e||{},t.geometry=r,t}function c(r,e,a){if(a={},!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!m(r[0])||!m(r[1]))throw new Error("coordinates must contain numbers");var t={type:"Point",coordinates:r};return M(t,e,a)}function E(r,e,a){if(a===void 0&&(a={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");var t={type:"LineString",coordinates:r};return M(t,e,a)}function p(r,e){e===void 0&&(e="kilometers");var a=g[e];if(!a)throw new Error(e+" units is invalid");return r*a}function P(r,e){e===void 0&&(e="kilometers");var a=g[e];if(!a)throw new Error(e+" units is invalid");return r/a}function d(r){var e=r%(2*Math.PI);return e*180/Math.PI}function f(r){var e=r%360;return e*Math.PI/180}function m(r){return!isNaN(r)&&r!==null&&!Array.isArray(r)}function h(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if(r.type==="Feature"&&r.geometry!==null&&r.geometry.type==="Point")return r.geometry.coordinates;if(r.type==="Point")return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function k(r){return r.type==="Feature"?r.geometry:r}function x(r,e,a){a===void 0&&(a={});var t=h(r),n=h(e),o=f(n[1]-t[1]),i=f(n[0]-t[0]),D=f(t[1]),s=f(n[1]),l=Math.pow(Math.sin(o/2),2)+Math.pow(Math.sin(i/2),2)*Math.cos(D)*Math.cos(s);return p(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),a.units)}function S(r,e,a,t){t===void 0&&(t={});var n=h(r),o=f(n[0]),i=f(n[1]),D=f(a),s=P(e,t.units),l=Math.asin(Math.sin(i)*Math.cos(s)+Math.cos(i)*Math.sin(s)*Math.cos(D)),v=o+Math.atan2(Math.sin(D)*Math.sin(s)*Math.cos(i),Math.cos(s)-Math.sin(i)*Math.sin(l)),y=d(v),w=d(l);return c([y,w],t.properties)}function q(r,e,a){a={},a.final;var t=h(r),n=h(e),o=f(t[0]),i=f(n[0]),D=f(t[1]),s=f(n[1]),l=Math.sin(i-o)*Math.cos(s),v=Math.cos(D)*Math.sin(s)-Math.sin(D)*Math.cos(s)*Math.cos(i-o);return d(Math.atan2(l,v))}function I(r,e,a){a===void 0&&(a={});for(var t=k(r),n=t.coordinates,o=0,i=0;i<n.length&&!(e>=o&&i===n.length-1);i++)if(o>=e){var D=e-o;if(D){var s=q(n[i],n[i-1])-180,l=S(n[i],D,s,a);return l}else return c(n[i])}else o+=x(n[i],n[i+1],a);return c(n[n.length-1])}const L=b({__name:"turf",props:{msg:{}},setup(r){const e=A(0);return console.log(`ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ ~ src/views/turf.vue:18
`,"lineString, along",`
`,"count =",e,`
`,"lineString =",E,`
`,"along =",I),(a,t)=>null}}),R=_(L,[["__scopeId","data-v-2299d4cc"]]);export{R as default};
